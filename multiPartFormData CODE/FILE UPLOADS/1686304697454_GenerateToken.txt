
 		ResponseEntity<String> response = null;

 		// ADD basic auth later
 	
 		JSONObject responseJSON = new JSONObject();
 		
 		
 		// Key is hardcoded here for simplicity. 
 		// Ideally this will get loaded from env configuration/secret vault
 		String secret = "asdfSFS34wfsdfsdfSDSD32dfsddDDerQSNCK34SOWEK5354fdgdf4";
 		
 		Key hmacKey = new SecretKeySpec(Base64.getDecoder().decode(secret), 
 		                            SignatureAlgorithm.HS256.getJcaName());

 		Instant now = Instant.now();
 		String jwtToken = Jwts.builder()
 		        .claim("userName", "ADMIN BBBBB")
 		        .claim("basicAuthUserName", "ekaUser")
 		       .claim("basicAuthPassword", "ekaUser123")
 		        .setSubject("tokenGenerator")
 		        .setId(UUID.randomUUID().toString())
 		        .setIssuedAt(Date.from(now))
 		        .setExpiration(Date.from(now.plus(5l, ChronoUnit.MINUTES)))
 		        .signWith(hmacKey)
 		        .compact();
 		
 		
 		
			responseJSON.put("access_token", jwtToken);
			responseJSON.put("status", "success");
			responseJSON.put("expiationTimeLimit", "Two minutes");
			Date date = new Date();
			  Timestamp timestamp2 = new Timestamp(date.getTime());
			responseJSON.put("issued at", timestamp2.toString());
	
		
 		
 		response = new ResponseEntity(responseJSON.toString(3), HttpStatus.OK);
 		return response;
 	